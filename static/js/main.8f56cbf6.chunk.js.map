{"version":3,"sources":["Encode.js","Decode.js","App.js","index.js"],"names":["Encode","stringToEncode","stringData","inputString","value","isNaN","Number","POSITIVE_INFINITY","result","charAt","Math","floor","encodeToRadix64","Decode","stringToDecode","s","split","e","length","indexOf","decodeRadix64","App","useState","showED","setStringData","className","type","name","placeholder","onChange","target","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAoCeA,MAlCf,YAAiC,IAC1BC,EADyB,EAAdC,WACiBC,YA8BlC,OAAO,oCAzBP,SAAyBC,GACxB,GACCC,MAAMC,OAAOF,KACH,OAAVA,GACAA,IAAUE,OAAOC,kBAEjB,MAAO,4BACR,GAAIH,EAAQ,EAAG,MAAO,oCAKtB,IAHA,IACCI,EAAS,GAITA,EAhBD,mEAgBkBC,OADXL,EAAQ,IACiBI,EAGjB,KAFdJ,EAAQM,KAAKC,MAAMP,EAAQ,OAO5B,OAAOI,EAGEI,CAAgBX,KCXZY,MApBf,YAAiC,IAC1BC,EADyB,EAAdZ,WACiBC,YAgBlC,OAAO,oCAXP,SAAuBY,GACtB,IAAIP,EAAS,EAEbO,EAAIA,EAAEC,MAAM,IACZ,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAEG,OAAQD,IAC7BT,EAAkB,GAATA,EAPV,mEAOgCW,QAAQJ,EAAEE,IAG1C,OAAOT,EAGEY,CAAcN,K,MCyCVO,MAvDf,WAAgB,IAAD,EACsBC,mBAAS,CAC5CnB,YAAa,GACboB,OAAQ,KAHK,mBACPrB,EADO,KACKsB,EADL,KAwBd,OACC,yBAAKC,UAAU,OACd,6DACA,8BACC,wCACA,2BACCC,KAAK,OACLC,KAAK,cACLC,YAAY,kBACZxB,MAAOoB,EAAcrB,YACrB0B,SA5BJ,SAAuBZ,GACtBO,EAAc,CAAErB,YAAac,EAAEa,OAAO1B,MAAOmB,QAAQ,QA8BpD,yBAAKE,UAAU,cACd,4BAAQM,QA5BX,SAAoBd,GACnBO,EAAc,CACbrB,YAAaD,EAAWC,YACxBoB,QAAQ,MAyBP,UACA,4BAAQQ,QAtBX,SAAoBd,GACnBO,EAAc,CACbrB,YAAaD,EAAWC,YACxBoB,QAAQ,MAmBP,WAED,yBAAKE,UAAU,aACd,0CACA,8BACEvB,EAAWqB,OACX,kBAAC,EAAD,CAAQrB,WAAYA,IAEpB,kBAAC,EAAD,CAAQA,WAAYA,QC/C1B8B,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,OAEDC,SAASC,eAAe,W","file":"static/js/main.8f56cbf6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Encode({ stringData }) {\r\n\tconst stringToEncode = stringData.inputString;\r\n\r\n\tconst charSet =\r\n\t\t'0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_';\r\n\r\n\tfunction encodeToRadix64(value) {\r\n\t\tif (\r\n\t\t\tisNaN(Number(value)) ||\r\n\t\t\tvalue === null ||\r\n\t\t\tvalue === Number.POSITIVE_INFINITY\r\n\t\t)\r\n\t\t\treturn 'The input is not a number';\r\n\t\tif (value < 0) return \"Can't represent negative numbers.\";\r\n\r\n\t\tlet mod,\r\n\t\t\tresult = '';\r\n\r\n\t\twhile (true) {\r\n\t\t\tmod = value % 64;\r\n\t\t\tresult = charSet.charAt(mod) + result;\r\n\t\t\tvalue = Math.floor(value / 64);\r\n\r\n\t\t\tif (value === 0) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\treturn <>{encodeToRadix64(stringToEncode)}</>;\r\n}\r\n\r\nexport default Encode;\r\n","import React from 'react';\r\n\r\nfunction Decode({ stringData }) {\r\n\tconst stringToDecode = stringData.inputString;\r\n\r\n\tconst charSet =\r\n\t\t'0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_';\r\n\r\n\tfunction decodeRadix64(s) {\r\n\t\tlet result = 0;\r\n\r\n\t\ts = s.split('');\r\n\t\tfor (let e = 0; e < s.length; e++) {\r\n\t\t\tresult = result * 64 + charSet.indexOf(s[e]);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\treturn <>{decodeRadix64(stringToDecode)}</>;\r\n}\r\n\r\nexport default Decode;\r\n","import React, { useState } from 'react';\r\nimport Encode from './Encode';\r\nimport Decode from './Decode';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\tconst [stringData, setStringData] = useState({\r\n\t\tinputString: '',\r\n\t\tshowED: ''\r\n\t});\r\n\r\n\tfunction onChangeInput(e) {\r\n\t\tsetStringData({ inputString: e.target.value, showED: true });\r\n\t}\r\n\r\n\tfunction showEncode(e) {\r\n\t\tsetStringData({\r\n\t\t\tinputString: stringData.inputString,\r\n\t\t\tshowED: true\r\n\t\t});\r\n\t}\r\n\r\n\tfunction showDecode(e) {\r\n\t\tsetStringData({\r\n\t\t\tinputString: stringData.inputString,\r\n\t\t\tshowED: false\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<h1>React Radix64 Encode | Decode</h1>\r\n\t\t\t<form>\r\n\t\t\t\t<label>Input</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"inputString\"\r\n\t\t\t\t\tplaceholder=\"enter string...\"\r\n\t\t\t\t\tvalue={setStringData.inputString}\r\n\t\t\t\t\tonChange={onChangeInput}\r\n\t\t\t\t></input>\r\n\t\t\t</form>\r\n\t\t\t<div className=\"buttonsDiv\">\r\n\t\t\t\t<button onClick={showEncode}>encode</button>\r\n\t\t\t\t<button onClick={showDecode}>decode</button>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"outputDiv\">\r\n\t\t\t\t<label>Output:</label>\r\n\t\t\t\t<span>\r\n\t\t\t\t\t{stringData.showED ? (\r\n\t\t\t\t\t\t<Encode stringData={stringData} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Decode stringData={stringData} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}